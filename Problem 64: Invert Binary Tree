public TreeNode invertTree(TreeNode root) {
    // Base case: If the root is null, return null.
    if (root == null) {
        return null;
    }
    
    // Swap the left and right subtrees.
    TreeNode temp = root.left;
    root.left = root.right;
    root.right = temp;
    
    // Recursively invert the left subtree.
    invertTree(root.left);
    
    // Recursively invert the right subtree.
    invertTree(root.right);
    
       // Return the modified root node.
    return root;
}
