public int evalRPN(String[] tokens) {
    Stack<Integer> stack = new Stack<>();
    for (String token : tokens) {
        if (token.matches("-?\\d+")) {
            stack.push(Integer.parseInt(token));
        } else {
            int operand2 = stack.pop();
            int operand1 = stack.pop();
            int result = evaluate(operand1, operand2, token);
            stack.push(result);
        }
    }
    return stack.pop();
}

private int evaluate(int operand1, int operand2, String operator) {
    switch (operator) {
        case "+": return operand1 + operand2;
        case "-": return operand1 - operand2;
        case "*": return operand1 * operand2;
        case "/": return operand1 / operand2;
        default: return 0;
    }
}
