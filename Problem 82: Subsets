public List<List<Integer>> subsets(int[] nums) {
    List<List<Integer>> result = new ArrayList<>();
    backtrack(result, new ArrayList<>(), nums, 0);
    return result;
}

private void backtrack(List<List<Integer>> result, List<Integer> currentSubset, int[] nums, int start) {
    result.add(new ArrayList<>(currentSubset)); // Add the currentSubset to the result
    
    for (int i = start; i < nums.length; i++) {
        currentSubset.add(nums[i]); // Include the current element
        backtrack(result, currentSubset, nums, i + 1); // Recursively generate subsets
        currentSubset.remove(currentSubset.size() - 1); // Backtrack by removing the last element
    }
}
